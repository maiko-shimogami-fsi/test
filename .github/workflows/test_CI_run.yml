name: form-example 
on:
 workflow_dispatch:
    inputs:
      input_mod:
        description: 'Please enter the SHA-1 or branch name to UnitTest.'
        required: false

jobs:
    check-bats-version1:
      runs-on: windows-latest
      outputs:
       targetcompo: ${{ steps.step2.outputs.targetcompo }}
      
      steps:
      #環境を設定する
        - name: step1
          uses: actions/checkout@v3
        - run: |
             echo "checkout"
             
      #コンポの値設定
        - name: step2
          id: step2
          run: |
             $targetcompo += "["
             foreach ($l in Get-Content ./unittest_setting.json) {
              if ($l -like "*node_name*") {
                $node_name = $l.Substring(22, ($l.Length-24))
               } elseif ($l -like "*scheduled*") {
                if ($l -like "*true*") {
                  $targetcompo += "`""
                  $targetcompo += $node_name
                  $targetcompo += "`""
                  $targetcompo += ","
                  }
                }
               }
             $targetcompo += "]"
             $targetcompo = $targetcompo -replace '\,]',']'
             echo "targetcompo=$targetcompo"
             echo "targetcompo=$targetcompo" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
             echo "MY_ENV_COMPO=$targetcompo" | Out-File -Append -FilePath $env:GITHUB_ENV
        
        - name: step3
          id: step3
          run: |
             echo "MY_ENV_COMPO=${{ env.MY_ENV_COMPO }}" 
             
    check-bats-version2:
      runs-on: ubuntu-latest
      needs: [ check-bats-version1 ]
      outputs:
       targetcompo2: ${{ steps.step2.outputs.targetcompo2 }}
      strategy:
       max-parallel: 2
       matrix:
         compolist: ${{fromJson( needs.check-bats-version1.outputs.targetcompo )}}
      env:
       MY_ENV_COMPO : '["aaa"]'
      
      steps:
      #チェック確認
        - name: step1
          id: step1
          run: |
             echo "MY_ENV_COMPO='${{ needs.check-bats-version1.outputs.targetcompo }}'" >> "$GITHUB_ENV"
             #echo "targetcompo=${{ matrix.compolist }}" >> "$GITHUB_ENV"
             
        - name: step2
          id: step2
          run: |
             if [ $env_compo = "" ]; then
              env_compo=${{ env.MY_ENV_COMPO }}
             fi
             targetcompo=${{ matrix.compolist }}
             echo "env_compo=$env_compo"
             echo "targetcompo=$targetcompo"
             env_compo=("${env_compo[@]/$targetcompo}")
             #env_compo=("${env_compo[@]//\"\"}")
             echo "targetcompo2=$env_compo"
             echo "targetcompo2=$env_compo" >> "$GITHUB_OUTPUT"
             
        #- name: step2
        #  if: always()
        #  run: |
        #     echo "job.status=${{ job.status }}" 
        #     if [ ${{ job.status }} = 'failure' ]; then
        #      echo "エラー"
        #     fi
             
    check-bats-version3:
      runs-on: ubuntu-latest
      needs: [ check-bats-version1,check-bats-version2 ]
      if: always()
      strategy:
       max-parallel: 2
       matrix:
         compolist: ${{fromJson( needs.check-bats-version2.outputs.targetcompo2 )}}
         
      steps:
      #チェック確認
        - name: step1
          uses: actions/checkout@v3
        - run: |
            targetcompo3=${{ needs.check-bats-version2.outputs.targetcompo2 }}
            echo "targetcompo3=$targetcompo3"
            
