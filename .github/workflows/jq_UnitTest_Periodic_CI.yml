name: jq UnitTest CI Periodic CI
on:
  workflow_dispatch:
#jobを定義
jobs:
    checkout_and_clean_repo:
      runs-on: windows-latest
      outputs:
        UnitTestLcd: ${{ steps.step3.outputs.UnitTestLcd }}
        UnitTestBsm:   ${{ steps.step3.outputs.UnitTestBsm }}
        UnitTestDestJdg:  ${{ steps.step3.outputs.UnitTestDestJdg }}
        
      steps:
      #作業用リポジトリのクリーン
        - name: Clean self-hosted runner
          run: |
           echo "--- Get-Location ---"
           Get-Location
           echo "--- Get-PSDrive -Name C ---"
           Get-PSDrive -Name C
           echo "--- github.workspace=${{ github.workspace }} ---"
           $github_workspace="${{ github.workspace }}"
           echo "--- Get-ChildItem -Force | Format-Table (before Remove-Item) ---"
           Get-ChildItem -Force | Format-Table
           echo "--- Remove-Item -Recurse -Force -Path $github_workspace/* ---"
           Remove-Item -Recurse -Force -Path $github_workspace/*
           Remove-Item -Recurse -Force -Path $github_workspace/.??*
           echo "--- Get-ChildItem -Force (after Remove-Item) ---"
           Get-ChildItem -Force
      
      #作業用リポジトリへチェックアウト
        - name: checkout work-repo
          uses: actions/checkout@v4

      #コンポの値設定
        - name: step2
          id: step2
          run: |
             [string[]]$targetcompo = @()
             foreach ($l in Get-Content ./unittest_setting.json) {
              if ($l -like "*node_name*") {
                $node_name = $l.Substring(22, ($l.Length-24))
               } elseif ($l -like "*scheduled*") {
                if ($l -like "*true*") {
                  $targetcompo += $node_name
                  }
                }
               }
             echo "targetcompo=$targetcompo"
             
      #コンポの値設定3
        - name: step3
          id: step3
          run: |
             foreach ($l in Get-Content ./unittest_setting.json) {
              if ($l -like "*node_name*") {
                $node_name = $l.Substring(22, ($l.Length-24))
               } elseif ($l -like "*scheduled*") {
                if ($node_name -eq "Lcd") {
                  if ($l -like "*true*") {
                    $UnitTestLcd = 'true'
                    } else {
                    $UnitTestLcd = 'false'
                    }
                }
               }
              }
             echo "UnitTestLcd=$UnitTestLcd"      
             echo "UnitTestLcd=$UnitTestLcd" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
             
    exec_UnitTest_CI_Lcd:
      needs: [checkout_and_clean_repo]
      if: ${{ needs.checkout_and_clean_repo.outputs.UnitTestLcd == 'true' }}
      uses: ./.github/workflows/jq_UnitTest_CI.yml
      name: exec_UnitTest_CI_Lcd
      with:
        input_mod: "master"
        input_compo: "Lcd"

    exec_UnitTest_CI_Bsm:
      needs: [checkout_and_clean_repo]
      uses: ./.github/workflows/jq_UnitTest_CI.yml
      name: exec_UnitTest_CI_Bsm
      with:
        input_mod: "master"
        input_compo: "Bsm"

    exec_UnitTest_CI_DestJdg:
      needs: [checkout_and_clean_repo]
      uses: ./.github/workflows/jq_UnitTest_CI.yml
      name: exec_UnitTest_CI_DestJdg
      with:
        input_mod: "master"
        input_compo: "DestJdg"
