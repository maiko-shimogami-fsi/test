name: jq UnitTest CI Periodic CI
on:
  workflow_dispatch:
#jobを定義
jobs:
    checkout_and_clean_repo:
      runs-on: windows-latest
      outputs:
        ExecLcd: ${{ steps.step3.outputs.ExecLcd }}
        ExecBsm: ${{ steps.step3.outputs.ExecBsm }}
        ExecDestJdg: ${{ steps.step3.outputs.ExecDestJdg }}
        ExecTlmf: ${{ steps.step3.outputs.ExecTlmf }}
        Execofsn: ${{ steps.step3.outputs.Execofsn }}
        
      steps:
      #作業用リポジトリのクリーン
        - name: Clean self-hosted runner
          run: |
           echo "--- Get-Location ---"
           Get-Location
           echo "--- Get-PSDrive -Name C ---"
           Get-PSDrive -Name C
           echo "--- github.workspace=${{ github.workspace }} ---"
           $github_workspace="${{ github.workspace }}"
           echo "--- Get-ChildItem -Force | Format-Table (before Remove-Item) ---"
           Get-ChildItem -Force | Format-Table
           echo "--- Remove-Item -Recurse -Force -Path $github_workspace/* ---"
           Remove-Item -Recurse -Force -Path $github_workspace/*
           Remove-Item -Recurse -Force -Path $github_workspace/.??*
           echo "--- Get-ChildItem -Force (after Remove-Item) ---"
           Get-ChildItem -Force
      
      #作業用リポジトリへチェックアウト
        - name: checkout work-repo
          uses: actions/checkout@v4
             
      #コンポの値設定3
        - name: step3
          id: step3
          run: |
             $JsonFilePath = "./unittest_setting.json"
             $JsonData = Get-Content $JsonFilePath -Raw | ConvertFrom-Json

             $ExecLcd = 'false
             $ExecBsm = 'false'
             $ExecDestJdg = 'false'
             $ExecTlmf = 'false'
             $Execofsn = 'false'
             
             foreach ($comp_info in $JsonData.PSObject.Properties.Value) {
              if ($comp_info.node_name -eq "Lcd") {
                if ($comp_info.scheduled -eq 'true') {
                  $ExecLcd = 'true'
                 }
              } elseif ($comp_info.node_name -eq "Bsm") {
                if ($comp_info.scheduled -eq 'true') {
                  $ExecBsm = 'true'
                 }
              } elseif ($comp_info.node_name -eq "DestJdg") {
               if ($comp_info.scheduled -eq 'true') {
                   $ExecDestJdg = 'true'
                  }
              } elseif ($comp_info.node_name -eq "Tlmf") {
               if ($comp_info.scheduled -eq 'true') {
                   $ExecTlmf = 'true'
                  }
              } elseif ($comp_info.node_name -eq "ofsn") {
               if ($comp_info.scheduled -eq 'true') {
                   $Execofsn = 'true'
                  }
              }
             }

             echo "ExecLcd=$ExecLcd" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
             echo "ExecBsm=$ExecBsm" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
             echo "ExecDestJdg=$ExecDestJdg" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
             echo "ExecTlmf=$ExecTlmf" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
             echo "Execofsn=$Execofsn" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
             
    exec_UnitTest_CI_Lcd:
       needs: [checkout_and_clean_repo]
       if: ${{ needs.checkout_and_clean_repo.outputs.ExecLcd == 'true' }}
       uses: ./.github/workflows/jq_UnitTest_CI.yml
       name: exec_UnitTest_CI_Lcd
       with:
         input_mod: "master"
         input_compo: "Lcd"

    exec_UnitTest_CI_Bsm:
       needs: [checkout_and_clean_repo]
       if: ${{ needs.checkout_and_clean_repo.outputs.ExecBsm == 'true' }}
       uses: ./.github/workflows/jq_UnitTest_CI.yml
       name: exec_UnitTest_CI_Bsm
       with:
         input_mod: "master"
         input_compo: "Bsm"
